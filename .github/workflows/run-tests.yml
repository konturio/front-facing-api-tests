name: Run front-facing API tests
run-name: Run tests on ${{inputs.env || 'prod'}} env
on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        required: true
        options:
          - dev
          - test
          - prod
  schedule:
    - cron: "0 0 * * 1-5"

jobs:
  tests:
    name: Run API tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.event.inputs.env || 'prod'}}
      PROD_PRO_EMAIL: ${{ secrets.PROD_PRO_EMAIL }}
      PROD_PRO_PASSWORD: ${{ secrets.PROD_PRO_PASSWORD }}
      TEST_PRO_EMAIL: ${{ secrets.TEST_PRO_EMAIL }}
      TEST_PRO_PASSWORD: ${{ secrets.TEST_PRO_PASSWORD }}
      DEV_PRO_EMAIL: ${{ secrets.DEV_PRO_EMAIL }}
      DEV_PRO_PASSWORD: ${{ secrets.DEV_PRO_PASSWORD }}
      SLACK_BOT_USER_OAUTH_TOKEN: ${{secrets.PLAYWRIGHT_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21"
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Create .env file
        shell: bash
        run: |
          ENV_PREFIX=$(echo "$ENVIRONMENT" | tr '[:lower:]' '[:upper:]') # Convert to uppercase
          EMAIL_VAR_NAME="${ENV_PREFIX}_PRO_EMAIL"
          PASSWORD_VAR_NAME="${ENV_PREFIX}_PRO_PASSWORD"
          EMAIL="${!EMAIL_VAR_NAME}"
          PASSWORD="${!PASSWORD_VAR_NAME}"
          rm -rf .env.playwright
          echo "EMAIL_PRO=$EMAIL" >> .env.playwright
          echo "PASSWORD_PRO=$PASSWORD" >> .env.playwright
          echo "SLACK_BOT_USER_OAUTH_TOKEN=${SLACK_BOT_USER_OAUTH_TOKEN}" >> .env.playwright
          echo "ENVIRONMENT=$ENVIRONMENT" >> .env.playwright
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: playwright-cache
        with:
          path: |
            ~/.npm
            ~/.cache/ms-playwright/
          key: ${{ runner.os }}-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}
            ${{ runner.os }}-

      - name: Update playwright and install dependencies
        shell: bash
        run: |
          pnpm add -g playwright@latest
          pnpm add -D @playwright/test@latest
          npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - name: Upload tests results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
